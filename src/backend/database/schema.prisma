// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../../../data/database.db"
}

model Anime {
  id               String       @id @default(uuid())
  anilistID        Int
  anilistURL       String
  titles           AnimeTitle[]
  genres           Genre[]
  bannerImagePath  String
  coverImagePath   String
  description      String
  numberOfEpisodes Int
  releaseDate      DateTime
  status           String
  format           String
  folderPath       String       @unique
  meanScore        Int
  averageScore     Int
  Episodes         Episode[]
  season           Season?      @relation(fields: [seasonName, seasonYear], references: [name, year])
  seasonName       String?
  seasonYear       Int?
  studios          Studio[]
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

model AnimeTitle {
  id      Int    @id @default(autoincrement())
  name    String
  type    String
  anime   Anime  @relation(fields: [animeID], references: [id])
  animeID String
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  animes Anime[]
}

model Studio {
  id         Int     @id @default(autoincrement())
  anilistID  Int     @unique
  anilistURL String
  name       String
  animes     Anime[]
}

model Season {
  name  String
  year  Int
  Anime Anime[]

  @@id([name, year])
}

model Episode {
  id               String     @id @default(uuid())
  title            String
  filePath         String
  originalFilePath String
  coverImagePath   String
  wasConverted     Boolean
  anime            Anime      @relation(fields: [animeID], references: [id])
  animeID          String
  subtitles        Subtitle[]
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model Subtitle {
  id        String   @id @default(uuid())
  filePath  String
  language  String
  label     String
  episode   Episode  @relation(fields: [episodeID], references: [id])
  episodeID String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
